#!/bin/sh

# https://github.com/erichs/composure

_help_keywords ()
{
  echo "about example group param"
}

_typeset_functions ()
{
  typeset f
  for f in "$DOTFILES"/functions/*; do
    # Without nullglob, we'll get back the glob
    [[ -f "$f" ]] || continue

    f="${f##*/}"
    f="${f%.inc}"
    echo "$f"
  done
}

_longest_function_name_length ()
{
   _typeset_functions | awk 'BEGIN{ maxlength=0 }
  {
  for(i=1;i<=NF;i++)
    if (length($i)>maxlength)
    {
    maxlength=length($i)
    }
  }
  END{ print maxlength}'
}

_letterpress ()
{
  typeset rightcol="$1" leftcol="${2:- }" leftwidth="${3:-20}"

  if [ -z "$rightcol" ]; then
    return
  fi

  printf "%-*s%s\n" "$leftwidth" "$leftcol" "$rightcol"
}

metafor ()
{
  about 'Prints function metadata associated with keyword'
  param '1: meta keyword'
  example '$ typeset -f glossary | metafor example'
  group 'dthelp'

  typeset keyword=$1

  if [ -z "$keyword" ]; then
    printf '%s\n' 'missing parameter(s)'
    reference metafor
    return
  fi

  # this sed-fu is the retrieval half of the 'metadata' system:
  # 'grep' for the metadata keyword, and then parse/filter the matching line

  # grep keyword # strip trailing '|"|; # ignore thru keyword and leading '|"
  sed -n "/$keyword / s/['\";]*\$//;s/^[ 	]*$keyword ['\"]*\([^([].*\)*\$/\1/p"
}

ref ()
{
  about 'Displays apidoc help for a specific function'
  param '1: function name'
  example '$ reference revise'
  group 'dthelp'

  local color_title="$(tput setaf 10)"
  local color_reset="$(tput sgr0)"

  typeset func=$1
  if [ -z "$func" ]; then
    printf '%s\n' 'missing parameter(s)'
    reference reference
    return
  fi

  typeset line

  typeset about="$(typeset -f "$func" | metafor about)"
  printf "\n  $about\n"

  if [ -n "$(typeset -f $func | metafor param)" ]; then
    printf "\n  ${color_title}Options:${color_reset}\n"
    typeset -f $func | metafor param | while read -r line
    do
      printf "    $line\n"
    done
  fi

  if [ -n "$(typeset -f $func | metafor example)" ]; then
    printf "\n  ${color_title}Examples:${color_reset}\n"
    typeset -f $func | metafor example | while read -r line
    do
      printf "    $line\n"
    done
  fi
}

list ()
{
  about 'Displays help summary for all functions, or summary for a group of functions'
  param '1: optional, group name'
  example '$ list'
  example '$ list misc'
  group 'dthelp'

  local color_func="$(tput setaf 4)"
  local color_about="$(tput setaf 8)"
  local color_reset="$(tput sgr0)"

  typeset targetgroup=${1:-}
  typeset maxwidth=$(_longest_function_name_length | awk '{print $1 + 15}')

  for func in $(_typeset_functions); do

    if [ "X${targetgroup}X" != "XX" ]; then
      typeset group="$(typeset -f -- $func | metafor group)"
      if [ "$group" != "$targetgroup" ]; then
        continue  # skip non-matching groups, if specified
      fi
    fi
    typeset about="$(typeset -f -- $func | metafor about)"
    typeset aboutline=
    echo "$about" | fmt | while read -r aboutline; do
      if [[ $aboutline ]]; then
        _letterpress "$color_about$aboutline$color_reset" "$color_func$func$color_reset" "$maxwidth"
      fi
      func=" " # only display function name once
    done
  done
}

# bootstrap metadata
for f in $(_help_keywords)
do
  eval "$f() { :; }"
done
unset f
