#!/bin/sh

_nvm-cleanup-filter-current() {
  local current=$1; shift
  local list=$@

  for v in $list
  do
    if [ "$v" != "$current" ] && [ "$v" != "system" ]; then
      echo "$v"
    fi
  done
}

_nvm-cleanup-confirm() {
  read -p $'\e[35mAre you sure you want to delete these versions?\e[0m (y/n) ' -n 1 -r
  echo && echo    # (optional) move to a new line
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
    return 1
  fi
}

_nvm-cleanup-remove-list() {
  local list=$@
  local prev

  for v in $list
  do
    if [ "$prev" ]; then
      local prev_splited
      IFS='.' read -ra prev_splited <<< "$prev"

      local cur_splited
      IFS='.' read -ra cur_splited <<< "$v"

      if [ "${prev_splited[0]}" = "${cur_splited[0]}" ]; then
        local is_cur_greater="$(nvm_version_greater $cur $prev)"
        if [ is_cur_greater ]; then
          echo "$prev"
        else
          echo "$cur"
        fi
      fi
    fi

    prev="$v"
  done
}

nvm-cleanup() {
  about 'Removes old node versions from nvm'
  example '$ nvm-cleanup'
  group 'nvm'

  local color_title="\033[0;34m"
  local color_reset="\033[0m"
  local color_info="\033[1;33m"

  local current=$(nvm_ls_current)
  local list=$(nvm_ls)
  local remove_list="$(_nvm-cleanup-remove-list $list)"
  local versions="$(_nvm-cleanup-filter-current $current $remove_list)"

  if [ -z "$versions" ]; then
    echo -e "${color_info}NVM directory contains only one minor or patch version per each major, there is nothing to clean up!${color_reset}"
    return;
  fi

  echo -e "${color_title}Current node version is: ${color_info}$current${color_reset}"
  echo ""
  echo -e "${color_title}All installed version:${color_reset}"
  echo -e "$(nvm_ls)"
  echo ""
  echo -e "${color_title}Versions which will be uninstalled:${color_reset}"
  echo -e "$versions"
  echo ""

  if $(_nvm-cleanup-confirm); then
    return;
  fi

  echo ""

  for v in $versions
  do
    echo ""
    echo -e "Uninstalling: ${color_info}$v${color_reset}"
    nvm uninstall "$v"
  done
}
