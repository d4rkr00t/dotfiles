#!/bin/sh

dthelp() {
  local color_reset="\033[0;37m"
  local color_func="\033[1;32m"
  local color_arg="\033[1;33m"

  echo -e ""
  echo -e "FUNCTIONS:"
  echo -e ""
  echo -e "${color_func}aa_256${color_reset} — Print all 256 colors"
  echo -e ""
  echo -e "${color_func}bs-csscomb${color_reset} — Copy default .csscomb.json to current folder"
  echo -e "${color_func}bs-eslint${color_reset} — Copy default .eslintrc to current folder"
  echo -e "${color_func}bs-editorconfig${color_reset} — Copy default .editorconfig to current folder"
  echo -e ""
  echo -e "${color_func}cdf${color_reset} — cd into whatever is the forefront Finder window"
  echo -e "${color_func}cdgr${color_reset} — cd into git repo root"
  echo -e "${color_func}cf ${color_arg}[<dir:pwd>]${color_reset} — Count files"
  echo -e "${color_func}codepoint ${color_arg}<char>${color_reset} — Get a character’s Unicode code point: £ → \x00A3"
  echo -e "${color_func}ctxt ${color_arg}[<from:WINDOWS-1251>] [<to:UTF-8>] [<result folder:converted>]${color_reset} — # Convert text. Result folder will be removed and recreated"
  echo -e ""
  echo -e "${color_func}dataurl ${color_arg}<file>${color_reset} — Create a data URL from a file"
  echo -e ""
  echo -e "${color_func}exectime ${color_arg}<command>${color_reset} — Mesure execution time"
  echo -e "${color_func}extract ${color_arg}<file>${color_reset} — Extract archives of various types"
  echo -e ""
  echo -e "${color_func}ff${color_reset} — Better find(1)"
  echo -e "${color_func}find-exec ${color_arg}<pattern> <command>${color_reset} — Find files and exec commands at them. $ find-exec .coffee cat | wc -l"
  echo -e "${color_func}fr ${color_arg}<where> <from> <to>${color_reset} — Find and replace"
  echo -e ""
  echo -e "${color_func}ghurl${color_reset} — GitHub URL for current repo"
  echo -e "${color_func}gitor ${color_arg}<new origin url>${color_reset} — Change git origin to given url and make old origin as upstream"
  echo -e "${color_func}gitores${color_reset} — Restore remote origin url from upstream url"
  echo -e "${color_func}gz ${color_arg}<file>${color_reset} — Compare original and gzipped file size"
  echo -e ""
  echo -e "${color_func}imgsize ${color_arg}<file>${color_reset} — Quickly get image dimensions from the command line"
  echo -e ""
  echo -e "${color_func}jsonval ${color_arg}<file> <key> <count of results>${color_reset} — Get value of property from json file"
  echo -e ""
  echo -e "${color_func}manp ${color_arg}<command>${color_reset} — Show man page in Preview.app. $ manp cd"
  echo -e "${color_func}mkd ${color_arg}<name>${color_reset} — Create a new directory"
  echo -e "${color_func}mkdc ${color_arg}<name>${color_reset} — Create a new directory and enter it"
  echo -e "${color_func}movtogif ${color_arg}<file> [<output:out.gif>] [<size:1024>] [<rate:10>] [<colors:128>]${color_reset} — Converts mov to gif"
  echo -e ""
  echo -e "${color_func}npmurl${color_reset} — NPM URL for current package"
  echo -e "${color_func}nyan${color_reset} — Print nyan cat"
  echo -e ""
  echo -e "${color_func}ram ${color_arg}<app>${color_reset} — Show how much RAM application uses. $ ram safari"
  echo -e "${color_func}rndstr ${color_arg}<file>${color_reset} — Get random string from file"
  echo -e "${color_func}rndnum ${color_arg}<max_num>${color_reset} — Returns random number betwean 1 and max_number"
  echo -e ""
  echo -e "${color_func}sanitize${color_reset} — Sanitize all filenames in current dir: lowercase, no other characters than letters, digits, dash, underscore and dot"
  echo -e "${color_func}server ${color_arg}[<port:8000>]${color_reset} — Start an HTTP server from a directory, optionally specifying the port"
  echo -e "${color_func}sshfsmount ${color_arg}<host> <mount_path>${color_reset} — SSHFS mount"
  echo -e ""
  echo -e "${color_func}up ${color_arg}<times>${color_reset} — CD up number of times"
  echo -e "${color_func}upsearch ${color_arg}<what>${color_reset} — Search upwards till found. $ upsearch node_modules/.bin/babel-node"
  echo -e ""
}
